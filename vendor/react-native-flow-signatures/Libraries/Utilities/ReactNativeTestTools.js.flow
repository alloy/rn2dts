const React = require("react");

import type {ReactTestInstance} from "react-test-renderer";
import type {ReactTestRendererNode} from "react-test-renderer";
import type {Predicate} from "react-test-renderer";

declare function byClickable(): Predicate;

declare function byTestID(testID: string): Predicate;

declare function byTextMatching(regex: RegExp): Predicate;

declare function enter(instance: ReactTestInstance, text: string): void;

declare function maximumDepthError(
  tree: {toJSON: () => ReactTestRendererNode, ...},
  maxDepthLimit: number
): ?string;

declare function expectNoConsoleWarn(): void;

declare function expectNoConsoleError(): void;

declare function expectRendersMatchingSnapshot(
  name: string,
  ComponentProvider: () => React.Element<any>,
  unmockComponent: () => mixed
): void;

declare function maximumDepthOfJSON(node: ReactTestRendererNode): number;

declare function renderAndEnforceStrictMode(element: React.Node): any;

declare function renderWithStrictMode(element: React.Node): any;

declare function tap(instance: ReactTestInstance): void;

declare function scrollToBottom(instance: ReactTestInstance): void;

declare function withMessage(fn: Predicate, message: string): Predicate;

export {byClickable};
export {byTestID};
export {byTextMatching};
export {enter};
export {expectNoConsoleWarn};
export {expectNoConsoleError};
export {expectRendersMatchingSnapshot};
export {maximumDepthError};
export {maximumDepthOfJSON};
export {renderAndEnforceStrictMode};
export {renderWithStrictMode};
export {scrollToBottom};
export {tap};
export {withMessage};
