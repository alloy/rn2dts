import {Property} from "./Property";

declare class Type {
  domain: string,
  id: string,
  description: ?string,
  exported: ?boolean,
  experimental: ?boolean,
  static create(domain: string, obj: any, ignoreExperimental: boolean): ?Type,
  constructor(domain: string, obj: any): void,
  getDebuggerName(): string,
  getCppNamespace(): string,
  getCppType(): string,
  getForwardDecls(): Array<string>,
  getForwardDeclSortKey(): string,
}

declare class PrimitiveType
  extends Type {
  type: 'integer' | 'number' | 'object' | 'string',
  constructor(domain: string, obj: any, ignoreExperimental: boolean): void,
  getForwardDecls(): Array<string>,
}

declare class PropsType
  extends Type {
  type: 'object',
  properties: Array<Property>,
  constructor(domain: string, obj: any, ignoreExperimental: boolean): void,
  getForwardDecls(): Array<string>,
}
export {Type};

export {PrimitiveType};

export {PropsType};
