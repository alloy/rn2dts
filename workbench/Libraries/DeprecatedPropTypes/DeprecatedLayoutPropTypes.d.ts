import ReactPropTypes from 'prop-types';
import { React$PropType$Primitive } from "flow-builtin-types";
declare const LayoutPropTypes: {
    display: React$PropType$Primitive<"none" | "flex">;
    width: React$PropType$Primitive<string | number>;
    height: React$PropType$Primitive<string | number>;
    start: React$PropType$Primitive<string | number>;
    end: React$PropType$Primitive<string | number>;
    top: React$PropType$Primitive<string | number>;
    left: React$PropType$Primitive<string | number>;
    right: React$PropType$Primitive<string | number>;
    bottom: React$PropType$Primitive<string | number>;
    minWidth: React$PropType$Primitive<string | number>;
    maxWidth: React$PropType$Primitive<string | number>;
    minHeight: React$PropType$Primitive<string | number>;
    maxHeight: React$PropType$Primitive<string | number>;
    margin: React$PropType$Primitive<string | number>;
    marginVertical: React$PropType$Primitive<string | number>;
    marginHorizontal: React$PropType$Primitive<string | number>;
    marginTop: React$PropType$Primitive<string | number>;
    marginBottom: React$PropType$Primitive<string | number>;
    marginLeft: React$PropType$Primitive<string | number>;
    marginRight: React$PropType$Primitive<string | number>;
    marginStart: React$PropType$Primitive<string | number>;
    marginEnd: React$PropType$Primitive<string | number>;
    padding: React$PropType$Primitive<string | number>;
    paddingVertical: React$PropType$Primitive<string | number>;
    paddingHorizontal: React$PropType$Primitive<string | number>;
    paddingTop: React$PropType$Primitive<string | number>;
    paddingBottom: React$PropType$Primitive<string | number>;
    paddingLeft: React$PropType$Primitive<string | number>;
    paddingRight: React$PropType$Primitive<string | number>;
    paddingStart: React$PropType$Primitive<string | number>;
    paddingEnd: React$PropType$Primitive<string | number>;
    borderWidth: ReactPropTypes.Requireable<number>;
    borderTopWidth: ReactPropTypes.Requireable<number>;
    borderStartWidth: ReactPropTypes.Requireable<number>;
    borderEndWidth: ReactPropTypes.Requireable<number>;
    borderRightWidth: ReactPropTypes.Requireable<number>;
    borderBottomWidth: ReactPropTypes.Requireable<number>;
    borderLeftWidth: ReactPropTypes.Requireable<number>;
    position: React$PropType$Primitive<"absolute" | "relative">;
    flexDirection: React$PropType$Primitive<"column" | "column-reverse" | "row" | "row-reverse">;
    flexWrap: React$PropType$Primitive<"nowrap" | "wrap" | "wrap-reverse">;
    justifyContent: React$PropType$Primitive<"center" | "space-around" | "space-between" | "space-evenly" | "flex-end" | "flex-start">;
    alignItems: React$PropType$Primitive<"center" | "stretch" | "flex-end" | "flex-start" | "baseline">;
    alignSelf: React$PropType$Primitive<"auto" | "center" | "stretch" | "flex-end" | "flex-start" | "baseline">;
    alignContent: React$PropType$Primitive<"center" | "space-around" | "space-between" | "stretch" | "flex-end" | "flex-start">;
    overflow: React$PropType$Primitive<"hidden" | "visible" | "scroll">;
    flex: ReactPropTypes.Requireable<number>;
    flexGrow: ReactPropTypes.Requireable<number>;
    flexShrink: ReactPropTypes.Requireable<number>;
    flexBasis: React$PropType$Primitive<string | number>;
    aspectRatio: ReactPropTypes.Requireable<number>;
    zIndex: ReactPropTypes.Requireable<number>;
    direction: React$PropType$Primitive<CanvasDirection>;
};
export default LayoutPropTypes;
