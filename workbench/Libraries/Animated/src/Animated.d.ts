import React from 'react';
declare const _default: {
    Value: typeof import("./nodes/AnimatedValue").default;
    ValueXY: typeof import("./nodes/AnimatedValueXY").default;
    Interpolation: typeof import("./nodes/AnimatedInterpolation").default;
    Node: typeof import("./nodes/AnimatedNode").default;
    decay: (value: import("./nodes/AnimatedValue").default | import("./nodes/AnimatedValueXY").default, config: import("./animations/DecayAnimation").DecayAnimationConfig) => import("./AnimatedMock").CompositeAnimation;
    timing: (value: import("./nodes/AnimatedValue").default | import("./nodes/AnimatedValueXY").default, config: import("./animations/TimingAnimation").TimingAnimationConfig) => import("./AnimatedMock").CompositeAnimation;
    spring: (value: import("./nodes/AnimatedValue").default | import("./nodes/AnimatedValueXY").default, config: import("./animations/SpringAnimation").SpringAnimationConfig) => import("./AnimatedMock").CompositeAnimation;
    add: (a: number | import("./nodes/AnimatedNode").default, b: number | import("./nodes/AnimatedNode").default) => import("./nodes/AnimatedAddition").default;
    subtract: (a: number | import("./nodes/AnimatedNode").default, b: number | import("./nodes/AnimatedNode").default) => import("./nodes/AnimatedSubtraction").default;
    divide: (a: number | import("./nodes/AnimatedNode").default, b: number | import("./nodes/AnimatedNode").default) => import("./nodes/AnimatedDivision").default;
    multiply: (a: number | import("./nodes/AnimatedNode").default, b: number | import("./nodes/AnimatedNode").default) => import("./nodes/AnimatedMultiplication").default;
    modulo: (a: import("./nodes/AnimatedNode").default, modulus: number) => import("./nodes/AnimatedModulo").default;
    diffClamp: (a: import("./nodes/AnimatedNode").default, min: number, max: number) => import("./nodes/AnimatedDiffClamp").default;
    delay: (time: number) => import("./AnimatedMock").CompositeAnimation;
    sequence: (animations: import("./AnimatedMock").CompositeAnimation[]) => import("./AnimatedMock").CompositeAnimation;
    parallel: (animations: import("./AnimatedMock").CompositeAnimation[], config?: {
        stopTogether?: boolean | undefined;
    } | null | undefined) => import("./AnimatedMock").CompositeAnimation;
    stagger: (time: number, animations: import("./AnimatedMock").CompositeAnimation[]) => import("./AnimatedMock").CompositeAnimation;
    loop: (animation: import("./AnimatedMock").CompositeAnimation, { iterations }?: {
        iterations: number;
        resetBeforeIteration?: boolean | undefined;
    }) => import("./AnimatedMock").CompositeAnimation;
    event: (argMapping: (import("./nodes/AnimatedValue").default | {
        [key: string]: import("./AnimatedEvent").Mapping;
    } | null | undefined)[], config: import("./AnimatedEvent").EventConfig) => any;
    createAnimatedComponent: typeof import("./createAnimatedComponent").default;
    attachNativeEvent: any;
    forkEvent: (event: import("./AnimatedEvent").AnimatedEvent | ((...args: any) => any) | null | undefined, listener: (...args: any) => any) => import("./AnimatedEvent").AnimatedEvent | ((...args: any) => any);
    unforkEvent: (event: import("./AnimatedEvent").AnimatedEvent | ((...args: any) => any) | null | undefined, listener: (...args: any) => any) => void;
    Event: any;
    __PropsOnlyForTests: typeof import("./nodes/AnimatedProps").default;
    FlatList: any;
    Image: any;
    ScrollView: any;
    SectionList: any;
    Text: any;
    View: React.AbstractComponent<{
        readonly onBlur?: any;
        readonly onFocus?: any;
        readonly onAccessibilityAction?: any;
        readonly onAccessibilityTap?: any;
        readonly onLayout?: any;
        readonly onMagicTap?: any;
        readonly onAccessibilityEscape?: any;
        readonly onMoveShouldSetResponder?: any;
        readonly onMoveShouldSetResponderCapture?: any;
        readonly onResponderGrant?: any;
        readonly onResponderMove?: any;
        readonly onResponderReject?: any;
        readonly onResponderRelease?: any;
        readonly onResponderStart?: any;
        readonly onResponderEnd?: any;
        readonly onResponderTerminate?: any;
        readonly onResponderTerminationRequest?: any;
        readonly onStartShouldSetResponder?: any;
        readonly onStartShouldSetResponderCapture?: any;
        readonly onMouseEnter?: any;
        readonly onMouseLeave?: any;
        readonly onTouchCancel?: any;
        readonly onTouchCancelCapture?: any;
        readonly onTouchEnd?: any;
        readonly onTouchEndCapture?: any;
        readonly onTouchMove?: any;
        readonly onTouchMoveCapture?: any;
        readonly onTouchStart?: any;
        readonly onTouchStartCapture?: any;
        readonly nativeBackgroundAndroid?: any;
        readonly nativeForegroundAndroid?: any;
        readonly renderToHardwareTextureAndroid?: any;
        readonly collapsable?: any;
        readonly needsOffscreenAlphaCompositing?: any;
        readonly accessibilityLiveRegion?: any;
        readonly importantForAccessibility?: any;
        readonly hasTVPreferredFocus?: any;
        readonly nextFocusDown?: any;
        readonly nextFocusForward?: any;
        readonly nextFocusLeft?: any;
        readonly nextFocusRight?: any;
        readonly nextFocusUp?: any;
        readonly focusable?: any;
        readonly onClick?: any;
        readonly accessibilityIgnoresInvertColors?: any;
        readonly accessibilityViewIsModal?: any;
        readonly accessibilityElementsHidden?: any;
        readonly shouldRasterizeIOS?: any;
        readonly children?: any;
        readonly style?: any;
        readonly accessible?: any;
        readonly accessibilityLabel?: any;
        readonly accessibilityHint?: any;
        readonly accessibilityRole?: any;
        readonly accessibilityState?: any;
        readonly accessibilityValue?: any;
        readonly accessibilityActions?: any;
        readonly testID?: any;
        readonly nativeID?: any;
        readonly hitSlop?: any;
        readonly pointerEvents?: any;
        readonly removeClippedSubviews?: any;
    }, (import("utility-types/dist/mapped-types")._DeepReadonlyObject<{
        blur: () => void;
        focus: () => void;
        measure: (callback: import("../../Renderer/shims/ReactNativeTypes").MeasureOnSuccessCallback) => void;
        measureInWindow: (callback: import("../../Renderer/shims/ReactNativeTypes").MeasureInWindowOnSuccessCallback) => void;
        measureLayout: (relativeToNativeNode: number | undefined, onSuccess: import("../../Renderer/shims/ReactNativeTypes").MeasureLayoutOnSuccessCallback, onFail?: (() => void) | undefined) => void;
        setNativeProps: (nativeProps: any) => void;
    }> & React.ComponentMethods<import("utility-types/dist/mapped-types")._DeepReadonlyObject<{
        onBlur?: ((event: import("../../Types/CoreEventTypes").BlurEvent) => unknown) | null | undefined;
        onFocus?: ((event: import("../../Types/CoreEventTypes").FocusEvent) => unknown) | null | undefined;
        onAccessibilityAction?: ((event: import("../../Components/View/ViewAccessibility").AccessibilityActionEvent) => unknown) | null | undefined;
        onAccessibilityTap?: (() => unknown) | null | undefined;
        onLayout?: ((event: import("../../Types/CoreEventTypes").LayoutEvent) => unknown) | null | undefined;
        onMagicTap?: (() => unknown) | null | undefined;
        onAccessibilityEscape?: (() => unknown) | null | undefined;
        onMoveShouldSetResponder?: ((e: any) => boolean) | null | undefined;
        onMoveShouldSetResponderCapture?: ((e: any) => boolean) | null | undefined;
        onResponderGrant?: ((e: any) => boolean | void) | null | undefined;
        onResponderMove?: ((e: any) => void) | null | undefined;
        onResponderReject?: ((e: any) => void) | null | undefined;
        onResponderRelease?: ((e: any) => void) | null | undefined;
        onResponderStart?: ((e: any) => void) | null | undefined;
        onResponderEnd?: ((e: any) => void) | null | undefined;
        onResponderTerminate?: ((e: any) => void) | null | undefined;
        onResponderTerminationRequest?: ((e: any) => boolean) | null | undefined;
        onStartShouldSetResponder?: ((e: any) => boolean) | null | undefined;
        onStartShouldSetResponderCapture?: ((e: any) => boolean) | null | undefined;
        onMouseEnter?: ((event: import("../../Types/CoreEventTypes").MouseEvent) => void) | undefined;
        onMouseLeave?: ((event: import("../../Types/CoreEventTypes").MouseEvent) => void) | undefined;
        onTouchCancel?: ((e: any) => void) | null | undefined;
        onTouchCancelCapture?: ((e: any) => void) | null | undefined;
        onTouchEnd?: ((e: any) => void) | null | undefined;
        onTouchEndCapture?: ((e: any) => void) | null | undefined;
        onTouchMove?: ((e: any) => void) | null | undefined;
        onTouchMoveCapture?: ((e: any) => void) | null | undefined;
        onTouchStart?: ((e: any) => void) | null | undefined;
        onTouchStartCapture?: ((e: any) => void) | null | undefined;
        nativeBackgroundAndroid?: import("utility-types/dist/mapped-types")._DeepReadonlyObject<{
            type: any;
            attribute: any;
        }> | import("utility-types/dist/mapped-types")._DeepReadonlyObject<{
            type: any;
            color?: any;
            borderless?: any;
        }> | null | undefined;
        nativeForegroundAndroid?: import("utility-types/dist/mapped-types")._DeepReadonlyObject<{
            type: any;
            attribute: any;
        }> | import("utility-types/dist/mapped-types")._DeepReadonlyObject<{
            type: any;
            color?: any;
            borderless?: any;
        }> | null | undefined;
        renderToHardwareTextureAndroid?: boolean | null | undefined;
        collapsable?: boolean | null | undefined;
        needsOffscreenAlphaCompositing?: boolean | null | undefined;
        accessibilityLiveRegion?: "none" | "assertive" | "polite" | null | undefined;
        importantForAccessibility?: "auto" | "yes" | "no" | "no-hide-descendants" | null | undefined;
        hasTVPreferredFocus?: boolean | null | undefined;
        nextFocusDown?: number | null | undefined;
        nextFocusForward?: number | null | undefined;
        nextFocusLeft?: number | null | undefined;
        nextFocusRight?: number | null | undefined;
        nextFocusUp?: number | null | undefined;
        focusable?: boolean | undefined;
        onClick?: ((event: any) => unknown) | null | undefined;
        accessibilityIgnoresInvertColors?: boolean | null | undefined;
        accessibilityViewIsModal?: boolean | null | undefined;
        accessibilityElementsHidden?: boolean | null | undefined;
        shouldRasterizeIOS?: boolean | null | undefined;
        children?: any;
        style?: false | void | "" | import("utility-types/dist/mapped-types")._DeepReadonlyObject<{
            display?: any;
            width?: any;
            height?: any;
            bottom?: any;
            end?: any;
            left?: any;
            right?: any;
            start?: any;
            top?: any;
            minWidth?: any;
            maxWidth?: any;
            minHeight?: any;
            maxHeight?: any;
            margin?: any;
            marginBottom?: any;
            marginEnd?: any;
            marginHorizontal?: any;
            marginLeft?: any;
            marginRight?: any;
            marginStart?: any;
            marginTop?: any;
            marginVertical?: any;
            padding?: any;
            paddingBottom?: any;
            paddingEnd?: any;
            paddingHorizontal?: any;
            paddingLeft?: any;
            paddingRight?: any;
            paddingStart?: any;
            paddingTop?: any;
            paddingVertical?: any;
            borderWidth?: any;
            borderBottomWidth?: any;
            borderEndWidth?: any;
            borderLeftWidth?: any;
            borderRightWidth?: any;
            borderStartWidth?: any;
            borderTopWidth?: any;
            position?: any;
            flexDirection?: any;
            flexWrap?: any;
            justifyContent?: any;
            alignItems?: any;
            alignSelf?: any;
            alignContent?: any;
            overflow?: any;
            flex?: any;
            flexGrow?: any;
            flexShrink?: any;
            flexBasis?: any;
            aspectRatio?: any;
            zIndex?: any;
            direction?: any;
            shadowColor?: any;
            shadowOffset?: any;
            shadowOpacity?: any;
            shadowRadius?: any;
            transform?: any;
            backfaceVisibility?: any;
            backgroundColor?: any;
            borderColor?: any;
            borderBottomColor?: any;
            borderEndColor?: any;
            borderLeftColor?: any;
            borderRightColor?: any;
            borderStartColor?: any;
            borderTopColor?: any;
            borderRadius?: any;
            borderBottomEndRadius?: any;
            borderBottomLeftRadius?: any;
            borderBottomRightRadius?: any;
            borderBottomStartRadius?: any;
            borderTopEndRadius?: any;
            borderTopLeftRadius?: any;
            borderTopRightRadius?: any;
            borderTopStartRadius?: any;
            borderStyle?: any;
            opacity?: any;
            elevation?: any;
        }> | readonly (false | void | "" | import("utility-types/dist/mapped-types")._DeepReadonlyObject<{
            display?: any;
            width?: any;
            height?: any;
            bottom?: any;
            end?: any;
            left?: any;
            right?: any;
            start?: any;
            top?: any;
            minWidth?: any;
            maxWidth?: any;
            minHeight?: any;
            maxHeight?: any;
            margin?: any;
            marginBottom?: any;
            marginEnd?: any;
            marginHorizontal?: any;
            marginLeft?: any;
            marginRight?: any;
            marginStart?: any;
            marginTop?: any;
            marginVertical?: any;
            padding?: any;
            paddingBottom?: any;
            paddingEnd?: any;
            paddingHorizontal?: any;
            paddingLeft?: any;
            paddingRight?: any;
            paddingStart?: any;
            paddingTop?: any;
            paddingVertical?: any;
            borderWidth?: any;
            borderBottomWidth?: any;
            borderEndWidth?: any;
            borderLeftWidth?: any;
            borderRightWidth?: any;
            borderStartWidth?: any;
            borderTopWidth?: any;
            position?: any;
            flexDirection?: any;
            flexWrap?: any;
            justifyContent?: any;
            alignItems?: any;
            alignSelf?: any;
            alignContent?: any;
            overflow?: any;
            flex?: any;
            flexGrow?: any;
            flexShrink?: any;
            flexBasis?: any;
            aspectRatio?: any;
            zIndex?: any;
            direction?: any;
            shadowColor?: any;
            shadowOffset?: any;
            shadowOpacity?: any;
            shadowRadius?: any;
            transform?: any;
            backfaceVisibility?: any;
            backgroundColor?: any;
            borderColor?: any;
            borderBottomColor?: any;
            borderEndColor?: any;
            borderLeftColor?: any;
            borderRightColor?: any;
            borderStartColor?: any;
            borderTopColor?: any;
            borderRadius?: any;
            borderBottomEndRadius?: any;
            borderBottomLeftRadius?: any;
            borderBottomRightRadius?: any;
            borderBottomStartRadius?: any;
            borderTopEndRadius?: any;
            borderTopLeftRadius?: any;
            borderTopRightRadius?: any;
            borderTopStartRadius?: any;
            borderStyle?: any;
            opacity?: any;
            elevation?: any;
        }> | readonly (false | void | "" | import("utility-types/dist/mapped-types")._DeepReadonlyObject<{
            display?: any;
            width?: any;
            height?: any;
            bottom?: any;
            end?: any;
            left?: any;
            right?: any;
            start?: any;
            top?: any;
            minWidth?: any;
            maxWidth?: any;
            minHeight?: any;
            maxHeight?: any;
            margin?: any;
            marginBottom?: any;
            marginEnd?: any;
            marginHorizontal?: any;
            marginLeft?: any;
            marginRight?: any;
            marginStart?: any;
            marginTop?: any;
            marginVertical?: any;
            padding?: any;
            paddingBottom?: any;
            paddingEnd?: any;
            paddingHorizontal?: any;
            paddingLeft?: any;
            paddingRight?: any;
            paddingStart?: any;
            paddingTop?: any;
            paddingVertical?: any;
            borderWidth?: any;
            borderBottomWidth?: any;
            borderEndWidth?: any;
            borderLeftWidth?: any;
            borderRightWidth?: any;
            borderStartWidth?: any;
            borderTopWidth?: any;
            position?: any;
            flexDirection?: any;
            flexWrap?: any;
            justifyContent?: any;
            alignItems?: any;
            alignSelf?: any;
            alignContent?: any;
            overflow?: any;
            flex?: any;
            flexGrow?: any;
            flexShrink?: any;
            flexBasis?: any;
            aspectRatio?: any;
            zIndex?: any;
            direction?: any;
            shadowColor?: any;
            shadowOffset?: any;
            shadowOpacity?: any;
            shadowRadius?: any;
            transform?: any;
            backfaceVisibility?: any;
            backgroundColor?: any;
            borderColor?: any;
            borderBottomColor?: any;
            borderEndColor?: any;
            borderLeftColor?: any;
            borderRightColor?: any;
            borderStartColor?: any;
            borderTopColor?: any;
            borderRadius?: any;
            borderBottomEndRadius?: any;
            borderBottomLeftRadius?: any;
            borderBottomRightRadius?: any;
            borderBottomStartRadius?: any;
            borderTopEndRadius?: any;
            borderTopLeftRadius?: any;
            borderTopRightRadius?: any;
            borderTopStartRadius?: any;
            borderStyle?: any;
            opacity?: any;
            elevation?: any;
        }> | readonly (false | void | "" | import("utility-types/dist/mapped-types")._DeepReadonlyObject<{
            display?: any;
            width?: any;
            height?: any;
            bottom?: any;
            end?: any;
            left?: any;
            right?: any;
            start?: any;
            top?: any;
            minWidth?: any;
            maxWidth?: any;
            minHeight?: any;
            maxHeight?: any;
            margin?: any;
            marginBottom?: any;
            marginEnd?: any;
            marginHorizontal?: any;
            marginLeft?: any;
            marginRight?: any;
            marginStart?: any;
            marginTop?: any;
            marginVertical?: any;
            padding?: any;
            paddingBottom?: any;
            paddingEnd?: any;
            paddingHorizontal?: any;
            paddingLeft?: any;
            paddingRight?: any;
            paddingStart?: any;
            paddingTop?: any;
            paddingVertical?: any;
            borderWidth?: any;
            borderBottomWidth?: any;
            borderEndWidth?: any;
            borderLeftWidth?: any;
            borderRightWidth?: any;
            borderStartWidth?: any;
            borderTopWidth?: any;
            position?: any;
            flexDirection?: any;
            flexWrap?: any;
            justifyContent?: any;
            alignItems?: any;
            alignSelf?: any;
            alignContent?: any;
            overflow?: any;
            flex?: any;
            flexGrow?: any;
            flexShrink?: any;
            flexBasis?: any;
            aspectRatio?: any;
            zIndex?: any;
            direction?: any;
            shadowColor?: any;
            shadowOffset?: any;
            shadowOpacity?: any;
            shadowRadius?: any;
            transform?: any;
            backfaceVisibility?: any;
            backgroundColor?: any;
            borderColor?: any;
            borderBottomColor?: any;
            borderEndColor?: any;
            borderLeftColor?: any;
            borderRightColor?: any;
            borderStartColor?: any;
            borderTopColor?: any;
            borderRadius?: any;
            borderBottomEndRadius?: any;
            borderBottomLeftRadius?: any;
            borderBottomRightRadius?: any;
            borderBottomStartRadius?: any;
            borderTopEndRadius?: any;
            borderTopLeftRadius?: any;
            borderTopRightRadius?: any;
            borderTopStartRadius?: any;
            borderStyle?: any;
            opacity?: any;
            elevation?: any;
        }> | readonly (false | void | "" | import("utility-types/dist/mapped-types")._DeepReadonlyObject<{
            display?: any;
            width?: any;
            height?: any;
            bottom?: any;
            end?: any;
            left?: any;
            right?: any;
            start?: any;
            top?: any;
            minWidth?: any;
            maxWidth?: any;
            minHeight?: any;
            maxHeight?: any;
            margin?: any;
            marginBottom?: any;
            marginEnd?: any;
            marginHorizontal?: any;
            marginLeft?: any;
            marginRight?: any;
            marginStart?: any;
            marginTop?: any;
            marginVertical?: any;
            padding?: any;
            paddingBottom?: any;
            paddingEnd?: any;
            paddingHorizontal?: any;
            paddingLeft?: any;
            paddingRight?: any;
            paddingStart?: any;
            paddingTop?: any;
            paddingVertical?: any;
            borderWidth?: any;
            borderBottomWidth?: any;
            borderEndWidth?: any;
            borderLeftWidth?: any;
            borderRightWidth?: any;
            borderStartWidth?: any;
            borderTopWidth?: any;
            position?: any;
            flexDirection?: any;
            flexWrap?: any;
            justifyContent?: any;
            alignItems?: any;
            alignSelf?: any;
            alignContent?: any;
            overflow?: any;
            flex?: any;
            flexGrow?: any;
            flexShrink?: any;
            flexBasis?: any;
            aspectRatio?: any;
            zIndex?: any;
            direction?: any;
            shadowColor?: any;
            shadowOffset?: any;
            shadowOpacity?: any;
            shadowRadius?: any;
            transform?: any;
            backfaceVisibility?: any;
            backgroundColor?: any;
            borderColor?: any;
            borderBottomColor?: any;
            borderEndColor?: any;
            borderLeftColor?: any;
            borderRightColor?: any;
            borderStartColor?: any;
            borderTopColor?: any;
            borderRadius?: any;
            borderBottomEndRadius?: any;
            borderBottomLeftRadius?: any;
            borderBottomRightRadius?: any;
            borderBottomStartRadius?: any;
            borderTopEndRadius?: any;
            borderTopLeftRadius?: any;
            borderTopRightRadius?: any;
            borderTopStartRadius?: any;
            borderStyle?: any;
            opacity?: any;
            elevation?: any;
        }> | readonly (false | void | "" | import("utility-types/dist/mapped-types")._DeepReadonlyObject<{
            display?: any;
            width?: any;
            height?: any;
            bottom?: any;
            end?: any;
            left?: any;
            right?: any;
            start?: any;
            top?: any;
            minWidth?: any;
            maxWidth?: any;
            minHeight?: any;
            maxHeight?: any;
            margin?: any;
            marginBottom?: any;
            marginEnd?: any;
            marginHorizontal?: any;
            marginLeft?: any;
            marginRight?: any;
            marginStart?: any;
            marginTop?: any;
            marginVertical?: any;
            padding?: any;
            paddingBottom?: any;
            paddingEnd?: any;
            paddingHorizontal?: any;
            paddingLeft?: any;
            paddingRight?: any;
            paddingStart?: any;
            paddingTop?: any;
            paddingVertical?: any;
            borderWidth?: any;
            borderBottomWidth?: any;
            borderEndWidth?: any;
            borderLeftWidth?: any;
            borderRightWidth?: any;
            borderStartWidth?: any;
            borderTopWidth?: any;
            position?: any;
            flexDirection?: any;
            flexWrap?: any;
            justifyContent?: any;
            alignItems?: any;
            alignSelf?: any;
            alignContent?: any;
            overflow?: any;
            flex?: any;
            flexGrow?: any;
            flexShrink?: any;
            flexBasis?: any;
            aspectRatio?: any;
            zIndex?: any;
            direction?: any;
            shadowColor?: any;
            shadowOffset?: any;
            shadowOpacity?: any;
            shadowRadius?: any;
            transform?: any;
            backfaceVisibility?: any;
            backgroundColor?: any;
            borderColor?: any;
            borderBottomColor?: any;
            borderEndColor?: any;
            borderLeftColor?: any;
            borderRightColor?: any;
            borderStartColor?: any;
            borderTopColor?: any;
            borderRadius?: any;
            borderBottomEndRadius?: any;
            borderBottomLeftRadius?: any;
            borderBottomRightRadius?: any;
            borderBottomStartRadius?: any;
            borderTopEndRadius?: any;
            borderTopLeftRadius?: any;
            borderTopRightRadius?: any;
            borderTopStartRadius?: any;
            borderStyle?: any;
            opacity?: any;
            elevation?: any;
        }> | readonly (false | void | "" | import("utility-types/dist/mapped-types")._DeepReadonlyObject<{
            display?: any;
            width?: any;
            height?: any;
            bottom?: any;
            end?: any;
            left?: any;
            right?: any;
            start?: any;
            top?: any;
            minWidth?: any;
            maxWidth?: any;
            minHeight?: any;
            maxHeight?: any;
            margin?: any;
            marginBottom?: any;
            marginEnd?: any;
            marginHorizontal?: any;
            marginLeft?: any;
            marginRight?: any;
            marginStart?: any;
            marginTop?: any;
            marginVertical?: any;
            padding?: any;
            paddingBottom?: any;
            paddingEnd?: any;
            paddingHorizontal?: any;
            paddingLeft?: any;
            paddingRight?: any;
            paddingStart?: any;
            paddingTop?: any;
            paddingVertical?: any;
            borderWidth?: any;
            borderBottomWidth?: any;
            borderEndWidth?: any;
            borderLeftWidth?: any;
            borderRightWidth?: any;
            borderStartWidth?: any;
            borderTopWidth?: any;
            position?: any;
            flexDirection?: any;
            flexWrap?: any;
            justifyContent?: any;
            alignItems?: any;
            alignSelf?: any;
            alignContent?: any;
            overflow?: any;
            flex?: any;
            flexGrow?: any;
            flexShrink?: any;
            flexBasis?: any;
            aspectRatio?: any;
            zIndex?: any;
            direction?: any;
            shadowColor?: any;
            shadowOffset?: any;
            shadowOpacity?: any;
            shadowRadius?: any;
            transform?: any;
            backfaceVisibility?: any;
            backgroundColor?: any;
            borderColor?: any;
            borderBottomColor?: any;
            borderEndColor?: any;
            borderLeftColor?: any;
            borderRightColor?: any;
            borderStartColor?: any;
            borderTopColor?: any;
            borderRadius?: any;
            borderBottomEndRadius?: any;
            borderBottomLeftRadius?: any;
            borderBottomRightRadius?: any;
            borderBottomStartRadius?: any;
            borderTopEndRadius?: any;
            borderTopLeftRadius?: any;
            borderTopRightRadius?: any;
            borderTopStartRadius?: any;
            borderStyle?: any;
            opacity?: any;
            elevation?: any;
        }> | readonly (false | void | "" | import("utility-types/dist/mapped-types")._DeepReadonlyObject<{
            display?: any;
            width?: any;
            height?: any;
            bottom?: any;
            end?: any;
            left?: any;
            right?: any;
            start?: any;
            top?: any;
            minWidth?: any;
            maxWidth?: any;
            minHeight?: any;
            maxHeight?: any;
            margin?: any;
            marginBottom?: any;
            marginEnd?: any;
            marginHorizontal?: any;
            marginLeft?: any;
            marginRight?: any;
            marginStart?: any;
            marginTop?: any;
            marginVertical?: any;
            padding?: any;
            paddingBottom?: any;
            paddingEnd?: any;
            paddingHorizontal?: any;
            paddingLeft?: any;
            paddingRight?: any;
            paddingStart?: any;
            paddingTop?: any;
            paddingVertical?: any;
            borderWidth?: any;
            borderBottomWidth?: any;
            borderEndWidth?: any;
            borderLeftWidth?: any;
            borderRightWidth?: any;
            borderStartWidth?: any;
            borderTopWidth?: any;
            position?: any;
            flexDirection?: any;
            flexWrap?: any;
            justifyContent?: any;
            alignItems?: any;
            alignSelf?: any;
            alignContent?: any;
            overflow?: any;
            flex?: any;
            flexGrow?: any;
            flexShrink?: any;
            flexBasis?: any;
            aspectRatio?: any;
            zIndex?: any;
            direction?: any;
            shadowColor?: any;
            shadowOffset?: any;
            shadowOpacity?: any;
            shadowRadius?: any;
            transform?: any;
            backfaceVisibility?: any;
            backgroundColor?: any;
            borderColor?: any;
            borderBottomColor?: any;
            borderEndColor?: any;
            borderLeftColor?: any;
            borderRightColor?: any;
            borderStartColor?: any;
            borderTopColor?: any;
            borderRadius?: any;
            borderBottomEndRadius?: any;
            borderBottomLeftRadius?: any;
            borderBottomRightRadius?: any;
            borderBottomStartRadius?: any;
            borderTopEndRadius?: any;
            borderTopLeftRadius?: any;
            borderTopRightRadius?: any;
            borderTopStartRadius?: any;
            borderStyle?: any;
            opacity?: any;
            elevation?: any;
        }> | readonly (false | void | "" | import("utility-types/dist/mapped-types")._DeepReadonlyObject<{
            display?: any;
            width?: any;
            height?: any;
            bottom?: any;
            end?: any;
            left?: any;
            right?: any;
            start?: any;
            top?: any;
            minWidth?: any;
            maxWidth?: any;
            minHeight?: any;
            maxHeight?: any;
            margin?: any;
            marginBottom?: any;
            marginEnd?: any;
            marginHorizontal?: any;
            marginLeft?: any;
            marginRight?: any;
            marginStart?: any;
            marginTop?: any;
            marginVertical?: any;
            padding?: any;
            paddingBottom?: any;
            paddingEnd?: any;
            paddingHorizontal?: any;
            paddingLeft?: any;
            paddingRight?: any;
            paddingStart?: any;
            paddingTop?: any;
            paddingVertical?: any;
            borderWidth?: any;
            borderBottomWidth?: any;
            borderEndWidth?: any;
            borderLeftWidth?: any;
            borderRightWidth?: any;
            borderStartWidth?: any;
            borderTopWidth?: any;
            position?: any;
            flexDirection?: any;
            flexWrap?: any;
            justifyContent?: any;
            alignItems?: any;
            alignSelf?: any;
            alignContent?: any;
            overflow?: any;
            flex?: any;
            flexGrow?: any;
            flexShrink?: any;
            flexBasis?: any;
            aspectRatio?: any;
            zIndex?: any;
            direction?: any;
            shadowColor?: any;
            shadowOffset?: any;
            shadowOpacity?: any;
            shadowRadius?: any;
            transform?: any;
            backfaceVisibility?: any;
            backgroundColor?: any;
            borderColor?: any;
            borderBottomColor?: any;
            borderEndColor?: any;
            borderLeftColor?: any;
            borderRightColor?: any;
            borderStartColor?: any;
            borderTopColor?: any;
            borderRadius?: any;
            borderBottomEndRadius?: any;
            borderBottomLeftRadius?: any;
            borderBottomRightRadius?: any;
            borderBottomStartRadius?: any;
            borderTopEndRadius?: any;
            borderTopLeftRadius?: any;
            borderTopRightRadius?: any;
            borderTopStartRadius?: any;
            borderStyle?: any;
            opacity?: any;
            elevation?: any;
        }> | readonly (false | void | "" | import("utility-types/dist/mapped-types")._DeepReadonlyObject<{
            display?: any;
            width?: any;
            height?: any;
            bottom?: any;
            end?: any;
            left?: any;
            right?: any;
            start?: any;
            top?: any;
            minWidth?: any;
            maxWidth?: any;
            minHeight?: any;
            maxHeight?: any;
            margin?: any;
            marginBottom?: any;
            marginEnd?: any;
            marginHorizontal?: any;
            marginLeft?: any;
            marginRight?: any;
            marginStart?: any;
            marginTop?: any;
            marginVertical?: any;
            padding?: any;
            paddingBottom?: any;
            paddingEnd?: any;
            paddingHorizontal?: any;
            paddingLeft?: any;
            paddingRight?: any;
            paddingStart?: any;
            paddingTop?: any;
            paddingVertical?: any;
            borderWidth?: any;
            borderBottomWidth?: any;
            borderEndWidth?: any;
            borderLeftWidth?: any;
            borderRightWidth?: any;
            borderStartWidth?: any;
            borderTopWidth?: any;
            position?: any;
            flexDirection?: any;
            flexWrap?: any;
            justifyContent?: any;
            alignItems?: any;
            alignSelf?: any;
            alignContent?: any;
            overflow?: any;
            flex?: any;
            flexGrow?: any;
            flexShrink?: any;
            flexBasis?: any;
            aspectRatio?: any;
            zIndex?: any;
            direction?: any;
            shadowColor?: any;
            shadowOffset?: any;
            shadowOpacity?: any;
            shadowRadius?: any;
            transform?: any;
            backfaceVisibility?: any;
            backgroundColor?: any;
            borderColor?: any;
            borderBottomColor?: any;
            borderEndColor?: any;
            borderLeftColor?: any;
            borderRightColor?: any;
            borderStartColor?: any;
            borderTopColor?: any;
            borderRadius?: any;
            borderBottomEndRadius?: any;
            borderBottomLeftRadius?: any;
            borderBottomRightRadius?: any;
            borderBottomStartRadius?: any;
            borderTopEndRadius?: any;
            borderTopLeftRadius?: any;
            borderTopRightRadius?: any;
            borderTopStartRadius?: any;
            borderStyle?: any;
            opacity?: any;
            elevation?: any;
        }> | readonly (false | void | "" | import("utility-types/dist/mapped-types")._DeepReadonlyObject<{
            display?: any;
            width?: any;
            height?: any;
            bottom?: any;
            end?: any;
            left?: any;
            right?: any;
            start?: any;
            top?: any;
            minWidth?: any;
            maxWidth?: any;
            minHeight?: any;
            maxHeight?: any;
            margin?: any;
            marginBottom?: any;
            marginEnd?: any;
            marginHorizontal?: any;
            marginLeft?: any;
            marginRight?: any;
            marginStart?: any;
            marginTop?: any;
            marginVertical?: any;
            padding?: any;
            paddingBottom?: any;
            paddingEnd?: any;
            paddingHorizontal?: any;
            paddingLeft?: any;
            paddingRight?: any;
            paddingStart?: any;
            paddingTop?: any;
            paddingVertical?: any;
            borderWidth?: any;
            borderBottomWidth?: any;
            borderEndWidth?: any;
            borderLeftWidth?: any;
            borderRightWidth?: any;
            borderStartWidth?: any;
            borderTopWidth?: any;
            position?: any;
            flexDirection?: any;
            flexWrap?: any;
            justifyContent?: any;
            alignItems?: any;
            alignSelf?: any;
            alignContent?: any;
            overflow?: any;
            flex?: any;
            flexGrow?: any;
            flexShrink?: any;
            flexBasis?: any;
            aspectRatio?: any;
            zIndex?: any;
            direction?: any;
            shadowColor?: any;
            shadowOffset?: any;
            shadowOpacity?: any;
            shadowRadius?: any;
            transform?: any;
            backfaceVisibility?: any;
            backgroundColor?: any;
            borderColor?: any;
            borderBottomColor?: any;
            borderEndColor?: any;
            borderLeftColor?: any;
            borderRightColor?: any;
            borderStartColor?: any;
            borderTopColor?: any;
            borderRadius?: any;
            borderBottomEndRadius?: any;
            borderBottomLeftRadius?: any;
            borderBottomRightRadius?: any;
            borderBottomStartRadius?: any;
            borderTopEndRadius?: any;
            borderTopLeftRadius?: any;
            borderTopRightRadius?: any;
            borderTopStartRadius?: any;
            borderStyle?: any;
            opacity?: any;
            elevation?: any;
        }> | readonly (false | void | "" | import("utility-types/dist/mapped-types")._DeepReadonlyObject<{
            display?: any;
            width?: any;
            height?: any;
            bottom?: any;
            end?: any;
            left?: any;
            right?: any;
            start?: any;
            top?: any;
            minWidth?: any;
            maxWidth?: any;
            minHeight?: any;
            maxHeight?: any;
            margin?: any;
            marginBottom?: any;
            marginEnd?: any;
            marginHorizontal?: any;
            marginLeft?: any;
            marginRight?: any;
            marginStart?: any;
            marginTop?: any;
            marginVertical?: any;
            padding?: any;
            paddingBottom?: any;
            paddingEnd?: any;
            paddingHorizontal?: any;
            paddingLeft?: any;
            paddingRight?: any;
            paddingStart?: any;
            paddingTop?: any;
            paddingVertical?: any;
            borderWidth?: any;
            borderBottomWidth?: any;
            borderEndWidth?: any;
            borderLeftWidth?: any;
            borderRightWidth?: any;
            borderStartWidth?: any;
            borderTopWidth?: any;
            position?: any;
            flexDirection?: any;
            flexWrap?: any;
            justifyContent?: any;
            alignItems?: any;
            alignSelf?: any;
            alignContent?: any;
            overflow?: any;
            flex?: any;
            flexGrow?: any;
            flexShrink?: any;
            flexBasis?: any;
            aspectRatio?: any;
            zIndex?: any;
            direction?: any;
            shadowColor?: any;
            shadowOffset?: any;
            shadowOpacity?: any;
            shadowRadius?: any;
            transform?: any;
            backfaceVisibility?: any;
            backgroundColor?: any;
            borderColor?: any;
            borderBottomColor?: any;
            borderEndColor?: any;
            borderLeftColor?: any;
            borderRightColor?: any;
            borderStartColor?: any;
            borderTopColor?: any;
            borderRadius?: any;
            borderBottomEndRadius?: any;
            borderBottomLeftRadius?: any;
            borderBottomRightRadius?: any;
            borderBottomStartRadius?: any;
            borderTopEndRadius?: any;
            borderTopLeftRadius?: any;
            borderTopRightRadius?: any;
            borderTopStartRadius?: any;
            borderStyle?: any;
            opacity?: any;
            elevation?: any;
        }> | any | null)[] | null)[] | null)[] | null)[] | null)[] | null)[] | null)[] | null)[] | null)[] | null)[] | null)[] | null | undefined;
        accessible?: boolean | null | undefined;
        accessibilityLabel?: string | null | undefined;
        accessibilityHint?: string | null | undefined;
        accessibilityRole?: "search" | "link" | "none" | "button" | "header" | "menu" | "summary" | "image" | "switch" | "text" | "checkbox" | "radio" | "menubar" | "menuitem" | "progressbar" | "tab" | "toolbar" | "scrollbar" | "keyboardkey" | "adjustable" | "imagebutton" | "alert" | "combobox" | "radiogroup" | "spinbutton" | "tablist" | "timer" | null | undefined;
        accessibilityState?: import("../../Components/View/ViewAccessibility").AccessibilityState | null | undefined;
        accessibilityValue?: import("utility-types/dist/mapped-types")._DeepReadonlyObject<{
            min?: any;
            max?: any;
            now?: any;
            text?: any;
        }> | null | undefined;
        accessibilityActions?: readonly import("utility-types/dist/mapped-types")._DeepReadonlyObject<{
            name: any;
            label?: any;
        }>[] | null | undefined;
        testID?: string | null | undefined;
        nativeID?: string | null | undefined;
        hitSlop?: import("utility-types/dist/mapped-types")._DeepReadonlyObject<{
            top?: any;
            left?: any;
            bottom?: any;
            right?: any;
        }> | null | undefined;
        pointerEvents?: "auto" | "none" | "box-none" | "box-only" | null | undefined;
        removeClippedSubviews?: boolean | null | undefined;
    }>>) | undefined>;
};
export default _default;
