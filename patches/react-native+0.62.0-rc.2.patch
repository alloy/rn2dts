diff --git a/node_modules/react-native/Libraries/Animated/src/AnimatedEvent.js b/node_modules/react-native/Libraries/Animated/src/AnimatedEvent.js
index e3c0b81..cea04a8 100644
--- a/node_modules/react-native/Libraries/Animated/src/AnimatedEvent.js
+++ b/node_modules/react-native/Libraries/Animated/src/AnimatedEvent.js
@@ -201,4 +201,4 @@ class AnimatedEvent {
   }
 }
 
-module.exports = {AnimatedEvent, attachNativeEvent};
+export {AnimatedEvent, attachNativeEvent};
diff --git a/node_modules/react-native/Libraries/Animated/src/AnimatedImplementation.js b/node_modules/react-native/Libraries/Animated/src/AnimatedImplementation.js
index a1ce333..8560049 100644
--- a/node_modules/react-native/Libraries/Animated/src/AnimatedImplementation.js
+++ b/node_modules/react-native/Libraries/Animated/src/AnimatedImplementation.js
@@ -11,7 +11,7 @@
 
 'use strict';
 
-const {AnimatedEvent, attachNativeEvent} = require('./AnimatedEvent');
+import {AnimatedEvent, attachNativeEvent} from './AnimatedEvent';
 const AnimatedAddition = require('./nodes/AnimatedAddition');
 const AnimatedDiffClamp = require('./nodes/AnimatedDiffClamp');
 const AnimatedDivision = require('./nodes/AnimatedDivision');
diff --git a/node_modules/react-native/Libraries/Components/ScrollView/ScrollView.js b/node_modules/react-native/Libraries/Components/ScrollView/ScrollView.js
index 59f5517..c4754b6 100644
--- a/node_modules/react-native/Libraries/Components/ScrollView/ScrollView.js
+++ b/node_modules/react-native/Libraries/Components/ScrollView/ScrollView.js
@@ -696,7 +696,7 @@ class ScrollView extends React.Component<Props, State> {
       });
   }
 
-  _scrollAnimatedValue: AnimatedImplementation.Value = new AnimatedImplementation.Value(
+  _scrollAnimatedValue: typeof AnimatedImplementation.Value = new AnimatedImplementation.Value(
     0,
   );
   _scrollAnimatedValueAttachment: ?{detach: () => void, ...} = null;
diff --git a/node_modules/react-native/Libraries/Components/ScrollView/ScrollViewStickyHeader.js b/node_modules/react-native/Libraries/Components/ScrollView/ScrollViewStickyHeader.js
index 0bc51bb..ce24b46 100644
--- a/node_modules/react-native/Libraries/Components/ScrollView/ScrollViewStickyHeader.js
+++ b/node_modules/react-native/Libraries/Components/ScrollView/ScrollViewStickyHeader.js
@@ -23,7 +23,7 @@ export type Props = {
   children?: React.Element<any>,
   nextHeaderLayoutY: ?number,
   onLayout: (event: LayoutEvent) => void,
-  scrollAnimatedValue: AnimatedImplementation.Value,
+  scrollAnimatedValue: typeof AnimatedImplementation.Value,
   // Will cause sticky headers to stick at the bottom of the ScrollView instead
   // of the top.
   inverted: ?boolean,
diff --git a/node_modules/react-native/Libraries/Components/TextInput/InputAccessoryView.js b/node_modules/react-native/Libraries/Components/TextInput/InputAccessoryView.js
index 67d314c..7779b1a 100644
--- a/node_modules/react-native/Libraries/Components/TextInput/InputAccessoryView.js
+++ b/node_modules/react-native/Libraries/Components/TextInput/InputAccessoryView.js
@@ -10,13 +10,13 @@
 
 'use strict';
 
-const DeprecatedColorPropType = require('../../DeprecatedPropTypes/DeprecatedColorPropType');
 const Platform = require('../../Utilities/Platform');
 const React = require('react');
 const StyleSheet = require('../../StyleSheet/StyleSheet');
 
 import RCTInputAccessoryViewNativeComponent from './RCTInputAccessoryViewNativeComponent';
 
+import typeof DeprecatedColorPropType from '../../DeprecatedPropTypes/DeprecatedColorPropType';
 import type {ViewStyleProp} from '../../StyleSheet/StyleSheet';
 
 /**
diff --git a/node_modules/react-native/Libraries/Components/View/ReactNativeStyleAttributes.js b/node_modules/react-native/Libraries/Components/View/ReactNativeStyleAttributes.js
index ebd3c63..949b757 100644
--- a/node_modules/react-native/Libraries/Components/View/ReactNativeStyleAttributes.js
+++ b/node_modules/react-native/Libraries/Components/View/ReactNativeStyleAttributes.js
@@ -23,11 +23,11 @@ type BoolifiedDeprecatedViewStylePropTypes = $ObjMap<
   typeof DeprecatedViewStylePropTypes,
   ReturnBoolType,
 >;
-type BoolifiedDeprecatedTextStylePropTypes = $ObjMapi<
+type BoolifiedDeprecatedTextStylePropTypes = $ObjMap<
   typeof DeprecatedTextStylePropTypes,
   ReturnBoolType,
 >;
-type BoolifiedDeprecatedImageStylePropTypes = $ObjMapi<
+type BoolifiedDeprecatedImageStylePropTypes = $ObjMap<
   typeof DeprecatedImageStylePropTypes,
   ReturnBoolType,
 >;
diff --git a/node_modules/react-native/Libraries/polyfills/error-guard.js b/node_modules/react-native/Libraries/polyfills/error-guard.js
index 5b968d1..f4818da 100644
--- a/node_modules/react-native/Libraries/polyfills/error-guard.js
+++ b/node_modules/react-native/Libraries/polyfills/error-guard.js
@@ -12,7 +12,7 @@
 let _inGuard = 0;
 
 type ErrorHandler = (error: mixed, isFatal: boolean) => void;
-type Fn<Args, Return> = (...Args) => Return;
+type Fn<Args: $ReadOnlyArray<mixed>, Return> = (...args: Args) => Return;
 
 /**
  * This is the error handler that is called when we encounter an exception
@@ -88,7 +88,7 @@ const ErrorUtils = {
     fun: Fn<TArgs, TOut>,
     name?: ?string,
     context?: ?mixed,
-  ): ?(...TArgs) => ?TOut {
+  ): ?(...args: TArgs) => ?TOut {
     // TODO: (moti) T48204753 Make sure this warning is never hit and remove it - types
     // should be sufficient.
     if (typeof fun !== 'function') {
