diff --git a/node_modules/react-native/Libraries/Animated/src/AnimatedEvent.js b/node_modules/react-native/Libraries/Animated/src/AnimatedEvent.js
index e3c0b81..cea04a8 100644
--- a/node_modules/react-native/Libraries/Animated/src/AnimatedEvent.js
+++ b/node_modules/react-native/Libraries/Animated/src/AnimatedEvent.js
@@ -201,4 +201,4 @@ class AnimatedEvent {
   }
 }
 
-module.exports = {AnimatedEvent, attachNativeEvent};
+export {AnimatedEvent, attachNativeEvent};
diff --git a/node_modules/react-native/Libraries/Animated/src/AnimatedImplementation.js b/node_modules/react-native/Libraries/Animated/src/AnimatedImplementation.js
index a1ce333..8560049 100644
--- a/node_modules/react-native/Libraries/Animated/src/AnimatedImplementation.js
+++ b/node_modules/react-native/Libraries/Animated/src/AnimatedImplementation.js
@@ -11,7 +11,7 @@
 
 'use strict';
 
-const {AnimatedEvent, attachNativeEvent} = require('./AnimatedEvent');
+import {AnimatedEvent, attachNativeEvent} from './AnimatedEvent';
 const AnimatedAddition = require('./nodes/AnimatedAddition');
 const AnimatedDiffClamp = require('./nodes/AnimatedDiffClamp');
 const AnimatedDivision = require('./nodes/AnimatedDivision');
diff --git a/node_modules/react-native/Libraries/Components/ScrollView/ScrollView.js b/node_modules/react-native/Libraries/Components/ScrollView/ScrollView.js
index 59f5517..c4754b6 100644
--- a/node_modules/react-native/Libraries/Components/ScrollView/ScrollView.js
+++ b/node_modules/react-native/Libraries/Components/ScrollView/ScrollView.js
@@ -696,7 +696,7 @@ class ScrollView extends React.Component<Props, State> {
       });
   }
 
-  _scrollAnimatedValue: AnimatedImplementation.Value = new AnimatedImplementation.Value(
+  _scrollAnimatedValue: typeof AnimatedImplementation.Value = new AnimatedImplementation.Value(
     0,
   );
   _scrollAnimatedValueAttachment: ?{detach: () => void, ...} = null;
diff --git a/node_modules/react-native/Libraries/Components/ScrollView/ScrollViewStickyHeader.js b/node_modules/react-native/Libraries/Components/ScrollView/ScrollViewStickyHeader.js
index 0bc51bb..ce24b46 100644
--- a/node_modules/react-native/Libraries/Components/ScrollView/ScrollViewStickyHeader.js
+++ b/node_modules/react-native/Libraries/Components/ScrollView/ScrollViewStickyHeader.js
@@ -23,7 +23,7 @@ export type Props = {
   children?: React.Element<any>,
   nextHeaderLayoutY: ?number,
   onLayout: (event: LayoutEvent) => void,
-  scrollAnimatedValue: AnimatedImplementation.Value,
+  scrollAnimatedValue: typeof AnimatedImplementation.Value,
   // Will cause sticky headers to stick at the bottom of the ScrollView instead
   // of the top.
   inverted: ?boolean,
diff --git a/node_modules/react-native/Libraries/Components/TextInput/InputAccessoryView.js b/node_modules/react-native/Libraries/Components/TextInput/InputAccessoryView.js
index 67d314c..49ecb86 100644
--- a/node_modules/react-native/Libraries/Components/TextInput/InputAccessoryView.js
+++ b/node_modules/react-native/Libraries/Components/TextInput/InputAccessoryView.js
@@ -10,7 +10,6 @@
 
 'use strict';
 
-const DeprecatedColorPropType = require('../../DeprecatedPropTypes/DeprecatedColorPropType');
 const Platform = require('../../Utilities/Platform');
 const React = require('react');
 const StyleSheet = require('../../StyleSheet/StyleSheet');
@@ -85,7 +84,6 @@ type Props = $ReadOnly<{|
    */
   nativeID?: ?string,
   style?: ?ViewStyleProp,
-  backgroundColor?: ?DeprecatedColorPropType,
 |}>;
 
 class InputAccessoryView extends React.Component<Props> {
diff --git a/node_modules/react-native/Libraries/Components/TextInput/TextInput.js b/node_modules/react-native/Libraries/Components/TextInput/TextInput.js
index 02e1db6..1bc4612 100644
--- a/node_modules/react-native/Libraries/Components/TextInput/TextInput.js
+++ b/node_modules/react-native/Libraries/Components/TextInput/TextInput.js
@@ -10,7 +10,6 @@
 
 'use strict';
 
-const DeprecatedTextInputPropTypes = require('../../DeprecatedPropTypes/DeprecatedTextInputPropTypes');
 const Platform = require('../../Utilities/Platform');
 const React = require('react');
 const ReactNative = require('../../Renderer/shims/ReactNative');
@@ -1130,10 +1129,6 @@ ExportedForwardRef.defaultProps = {
   underlineColorAndroid: 'transparent',
 };
 
-// TODO: Deprecate this
-// $FlowFixMe
-ExportedForwardRef.propTypes = DeprecatedTextInputPropTypes;
-
 // $FlowFixMe
 ExportedForwardRef.State = {
   currentlyFocusedField: TextInputState.currentlyFocusedField,
@@ -1147,7 +1142,6 @@ type TextInputComponentStatics = $ReadOnly<{|
     focusTextInput: typeof TextInputState.focusTextInput,
     blurTextInput: typeof TextInputState.blurTextInput,
   |}>,
-  propTypes: typeof DeprecatedTextInputPropTypes,
 |}>;
 
 const styles = StyleSheet.create({
diff --git a/node_modules/react-native/Libraries/Components/View/ReactNativeStyleAttributes.js b/node_modules/react-native/Libraries/Components/View/ReactNativeStyleAttributes.js
index ebd3c63..9931a1d 100644
--- a/node_modules/react-native/Libraries/Components/View/ReactNativeStyleAttributes.js
+++ b/node_modules/react-native/Libraries/Components/View/ReactNativeStyleAttributes.js
@@ -10,32 +10,11 @@
 
 'use strict';
 
-const DeprecatedImageStylePropTypes = require('../../DeprecatedPropTypes/DeprecatedImageStylePropTypes');
-const DeprecatedTextStylePropTypes = require('../../DeprecatedPropTypes/DeprecatedTextStylePropTypes');
-const DeprecatedViewStylePropTypes = require('../../DeprecatedPropTypes/DeprecatedViewStylePropTypes');
-
 const processColor = require('../../StyleSheet/processColor');
 const processTransform = require('../../StyleSheet/processTransform');
 const sizesDiffer = require('../../Utilities/differ/sizesDiffer');
 
-type ReturnBoolType = <V>(V) => true;
-type BoolifiedDeprecatedViewStylePropTypes = $ObjMap<
-  typeof DeprecatedViewStylePropTypes,
-  ReturnBoolType,
->;
-type BoolifiedDeprecatedTextStylePropTypes = $ObjMapi<
-  typeof DeprecatedTextStylePropTypes,
-  ReturnBoolType,
->;
-type BoolifiedDeprecatedImageStylePropTypes = $ObjMapi<
-  typeof DeprecatedImageStylePropTypes,
-  ReturnBoolType,
->;
-
 type StyleAttributesType = {
-  ...BoolifiedDeprecatedViewStylePropTypes,
-  ...BoolifiedDeprecatedTextStylePropTypes,
-  ...BoolifiedDeprecatedImageStylePropTypes,
   transform: $ReadOnly<{|process: typeof processTransform|}> | true,
   shadowOffset: $ReadOnly<{|diff: typeof sizesDiffer|}> | true,
   backgroundColor: typeof colorAttributes | true,
diff --git a/node_modules/react-native/Libraries/Image/Image.android.js b/node_modules/react-native/Libraries/Image/Image.android.js
index fec14e0..7337778 100644
--- a/node_modules/react-native/Libraries/Image/Image.android.js
+++ b/node_modules/react-native/Libraries/Image/Image.android.js
@@ -10,9 +10,6 @@
 
 'use strict';
 
-const DeprecatedImageStylePropTypes = require('../DeprecatedPropTypes/DeprecatedImageStylePropTypes');
-const DeprecatedStyleSheetPropType = require('../DeprecatedPropTypes/DeprecatedStyleSheetPropType');
-const DeprecatedViewPropTypes = require('../DeprecatedPropTypes/DeprecatedViewPropTypes');
 const ImageViewNativeComponent = require('./ImageViewNativeComponent');
 const PropTypes = require('prop-types');
 const React = require('react');
@@ -35,10 +32,6 @@ function generateRequestId() {
 }
 
 const ImageProps = {
-  ...DeprecatedViewPropTypes,
-  style: (DeprecatedStyleSheetPropType(
-    DeprecatedImageStylePropTypes,
-  ): ReactPropsCheckType),
   /**
    * See https://facebook.github.io/react-native/docs/image.html#source
    */
diff --git a/node_modules/react-native/Libraries/Image/Image.ios.js b/node_modules/react-native/Libraries/Image/Image.ios.js
index 5cd7889..7a74e58 100644
--- a/node_modules/react-native/Libraries/Image/Image.ios.js
+++ b/node_modules/react-native/Libraries/Image/Image.ios.js
@@ -10,7 +10,6 @@
 
 'use strict';
 
-const DeprecatedImagePropType = require('../DeprecatedPropTypes/DeprecatedImagePropType');
 const React = require('react');
 const ReactNative = require('../Renderer/shims/ReactNative'); // eslint-disable-line no-unused-vars
 const StyleSheet = require('../StyleSheet/StyleSheet');
@@ -74,7 +73,6 @@ type ImageComponentStatics = $ReadOnly<{|
   prefetch: typeof prefetch,
   queryCache: typeof queryCache,
   resolveAssetSource: typeof resolveAssetSource,
-  propTypes: typeof DeprecatedImagePropType,
 |}>;
 
 /**
@@ -192,11 +190,6 @@ Image.queryCache = queryCache;
  * comment and run Flow. */
 Image.resolveAssetSource = resolveAssetSource;
 
-/* $FlowFixMe(>=0.89.0 site=react_native_ios_fb) This comment suppresses an
- * error found when Flow v0.89 was deployed. To see the error, delete this
- * comment and run Flow. */
-Image.propTypes = DeprecatedImagePropType;
-
 const styles = StyleSheet.create({
   base: {
     overflow: 'hidden',
diff --git a/node_modules/react-native/Libraries/Storage/AsyncStorage.js b/node_modules/react-native/Libraries/Storage/AsyncStorage.js
index 5c749a9..886e795 100644
--- a/node_modules/react-native/Libraries/Storage/AsyncStorage.js
+++ b/node_modules/react-native/Libraries/Storage/AsyncStorage.js
@@ -38,7 +38,7 @@ const AsyncStorage = {
   getItem: function(
     key: string,
     callback?: ?(error: ?Error, result: ?string) => void,
-  ): Promise {
+  ): Promise<?string> {
     invariant(RCTAsyncStorage, 'RCTAsyncStorage not available');
     return new Promise((resolve, reject) => {
       RCTAsyncStorage.multiGet([key], function(errors, result) {
@@ -64,7 +64,7 @@ const AsyncStorage = {
     key: string,
     value: string,
     callback?: ?(error: ?Error) => void,
-  ): Promise {
+  ): Promise<void> {
     invariant(RCTAsyncStorage, 'RCTAsyncStorage not available');
     return new Promise((resolve, reject) => {
       RCTAsyncStorage.multiSet([[key, value]], function(errors) {
@@ -87,7 +87,7 @@ const AsyncStorage = {
   removeItem: function(
     key: string,
     callback?: ?(error: ?Error) => void,
-  ): Promise {
+  ): Promise<void> {
     invariant(RCTAsyncStorage, 'RCTAsyncStorage not available');
     return new Promise((resolve, reject) => {
       RCTAsyncStorage.multiRemove([key], function(errors) {
@@ -114,7 +114,7 @@ const AsyncStorage = {
     key: string,
     value: string,
     callback?: ?(error: ?Error) => void,
-  ): Promise {
+  ): Promise<void> {
     invariant(RCTAsyncStorage, 'RCTAsyncStorage not available');
     return new Promise((resolve, reject) => {
       RCTAsyncStorage.multiMerge([[key, value]], function(errors) {
@@ -136,7 +136,7 @@ const AsyncStorage = {
    *
    * See http://facebook.github.io/react-native/docs/asyncstorage.html#clear
    */
-  clear: function(callback?: ?(error: ?Error) => void): Promise {
+  clear: function(callback?: ?(error: ?Error) => void): Promise<void> {
     invariant(RCTAsyncStorage, 'RCTAsyncStorage not available');
     return new Promise((resolve, reject) => {
       RCTAsyncStorage.clear(function(error) {
@@ -157,7 +157,7 @@ const AsyncStorage = {
    */
   getAllKeys: function(
     callback?: ?(error: ?Error, keys: ?Array<string>) => void,
-  ): Promise {
+  ): Promise<?Array<string>> {
     invariant(RCTAsyncStorage, 'RCTAsyncStorage not available');
     return new Promise((resolve, reject) => {
       RCTAsyncStorage.getAllKeys(function(error, keys) {
@@ -228,7 +228,7 @@ const AsyncStorage = {
   multiGet: function(
     keys: Array<string>,
     callback?: ?(errors: ?Array<Error>, result: ?Array<Array<string>>) => void,
-  ): Promise {
+  ): Promise<?Array<Array<string>>> {
     if (!this._immediate) {
       this._immediate = setImmediate(() => {
         this._immediate = null;
@@ -270,7 +270,7 @@ const AsyncStorage = {
   multiSet: function(
     keyValuePairs: Array<Array<string>>,
     callback?: ?(errors: ?Array<Error>) => void,
-  ): Promise {
+  ): Promise<void> {
     invariant(RCTAsyncStorage, 'RCTAsyncStorage not available');
     return new Promise((resolve, reject) => {
       RCTAsyncStorage.multiSet(keyValuePairs, function(errors) {
@@ -293,7 +293,7 @@ const AsyncStorage = {
   multiRemove: function(
     keys: Array<string>,
     callback?: ?(errors: ?Array<Error>) => void,
-  ): Promise {
+  ): Promise<void> {
     invariant(RCTAsyncStorage, 'RCTAsyncStorage not available');
     return new Promise((resolve, reject) => {
       RCTAsyncStorage.multiRemove(keys, function(errors) {
@@ -319,7 +319,7 @@ const AsyncStorage = {
   multiMerge: function(
     keyValuePairs: Array<Array<string>>,
     callback?: ?(errors: ?Array<Error>) => void,
-  ): Promise {
+  ): Promise<void> {
     invariant(RCTAsyncStorage, 'RCTAsyncStorage not available');
     return new Promise((resolve, reject) => {
       RCTAsyncStorage.multiMerge(keyValuePairs, function(errors) {
diff --git a/node_modules/react-native/Libraries/StyleSheet/StyleSheetValidation.js b/node_modules/react-native/Libraries/StyleSheet/StyleSheetValidation.js
index 6871751..5daea40 100644
--- a/node_modules/react-native/Libraries/StyleSheet/StyleSheetValidation.js
+++ b/node_modules/react-native/Libraries/StyleSheet/StyleSheetValidation.js
@@ -10,10 +10,6 @@
 
 'use strict';
 
-const DeprecatedImageStylePropTypes = require('../DeprecatedPropTypes/DeprecatedImageStylePropTypes');
-const DeprecatedTextStylePropTypes = require('../DeprecatedPropTypes/DeprecatedTextStylePropTypes');
-const DeprecatedViewStylePropTypes = require('../DeprecatedPropTypes/DeprecatedViewStylePropTypes');
-
 const invariant = require('invariant');
 
 // Hardcoded because this is a legit case but we don't want to load it from
@@ -87,10 +83,4 @@ const styleError = function(message1, style, caller?, message2?) {
 
 const allStylePropTypes = {};
 
-if (__DEV__ && !global.__RCTProfileIsProfiling) {
-  StyleSheetValidation.addValidStylePropTypes(DeprecatedImageStylePropTypes);
-  StyleSheetValidation.addValidStylePropTypes(DeprecatedTextStylePropTypes);
-  StyleSheetValidation.addValidStylePropTypes(DeprecatedViewStylePropTypes);
-}
-
 module.exports = StyleSheetValidation;
diff --git a/node_modules/react-native/Libraries/Text/Text.js b/node_modules/react-native/Libraries/Text/Text.js
index 92da79d..1cf1c24 100644
--- a/node_modules/react-native/Libraries/Text/Text.js
+++ b/node_modules/react-native/Libraries/Text/Text.js
@@ -10,7 +10,6 @@
 
 'use strict';
 
-const DeprecatedTextPropTypes = require('../DeprecatedPropTypes/DeprecatedTextPropTypes');
 const React = require('react');
 const ReactNativeViewAttributes = require('../Components/View/ReactNativeViewAttributes');
 const TextAncestor = require('./TextAncestor');
@@ -285,12 +284,6 @@ const Text = (
 const TextToExport = React.forwardRef(Text);
 TextToExport.displayName = 'Text';
 
-// TODO: Deprecate this.
-/* $FlowFixMe(>=0.89.0 site=react_native_fb) This comment suppresses an error
- * found when Flow v0.89 was deployed. To see the error, delete this comment
- * and run Flow. */
-TextToExport.propTypes = DeprecatedTextPropTypes;
-
 module.exports = ((TextToExport: $FlowFixMe): Class<
   NativeComponent<TextProps>,
 >);
diff --git a/node_modules/react-native/Libraries/polyfills/error-guard.js b/node_modules/react-native/Libraries/polyfills/error-guard.js
index 5b968d1..f4818da 100644
--- a/node_modules/react-native/Libraries/polyfills/error-guard.js
+++ b/node_modules/react-native/Libraries/polyfills/error-guard.js
@@ -12,7 +12,7 @@
 let _inGuard = 0;
 
 type ErrorHandler = (error: mixed, isFatal: boolean) => void;
-type Fn<Args, Return> = (...Args) => Return;
+type Fn<Args: $ReadOnlyArray<mixed>, Return> = (...args: Args) => Return;
 
 /**
  * This is the error handler that is called when we encounter an exception
@@ -88,7 +88,7 @@ const ErrorUtils = {
     fun: Fn<TArgs, TOut>,
     name?: ?string,
     context?: ?mixed,
-  ): ?(...TArgs) => ?TOut {
+  ): ?(...args: TArgs) => ?TOut {
     // TODO: (moti) T48204753 Make sure this warning is never hit and remove it - types
     // should be sufficient.
     if (typeof fun !== 'function') {
diff --git a/node_modules/react-native/index.js b/node_modules/react-native/index.js
index e9b7b65..5fa1e83 100644
--- a/node_modules/react-native/index.js
+++ b/node_modules/react-native/index.js
@@ -93,10 +93,6 @@ import typeof NativeModules from './Libraries/BatchedBridge/NativeModules';
 import typeof Platform from './Libraries/Utilities/Platform';
 import typeof processColor from './Libraries/StyleSheet/processColor';
 import typeof RootTagContext from './Libraries/ReactNative/RootTagContext';
-import typeof DeprecatedColorPropType from './Libraries/DeprecatedPropTypes/DeprecatedColorPropType';
-import typeof DeprecatedEdgeInsetsPropType from './Libraries/DeprecatedPropTypes/DeprecatedEdgeInsetsPropType';
-import typeof DeprecatedPointPropType from './Libraries/DeprecatedPropTypes/DeprecatedPointPropType';
-import typeof DeprecatedViewPropTypes from './Libraries/DeprecatedPropTypes/DeprecatedViewPropTypes';
 
 import type {HostComponent as _HostComponentInternal} from './Libraries/Renderer/shims/ReactNativeTypes';
 
@@ -441,20 +437,6 @@ module.exports = {
   get unstable_enableLogBox(): () => void {
     return require('./Libraries/YellowBox/YellowBox').__unstable_enableLogBox;
   },
-
-  // Prop Types
-  get ColorPropType(): DeprecatedColorPropType {
-    return require('./Libraries/DeprecatedPropTypes/DeprecatedColorPropType');
-  },
-  get EdgeInsetsPropType(): DeprecatedEdgeInsetsPropType {
-    return require('./Libraries/DeprecatedPropTypes/DeprecatedEdgeInsetsPropType');
-  },
-  get PointPropType(): DeprecatedPointPropType {
-    return require('./Libraries/DeprecatedPropTypes/DeprecatedPointPropType');
-  },
-  get ViewPropTypes(): DeprecatedViewPropTypes {
-    return require('./Libraries/DeprecatedPropTypes/DeprecatedViewPropTypes');
-  },
 };
 
 if (__DEV__) {
diff --git a/node_modules/react-native/interface.js b/node_modules/react-native/interface.js
index a5e7987..83bb950 100644
--- a/node_modules/react-native/interface.js
+++ b/node_modules/react-native/interface.js
@@ -20,6 +20,6 @@ declare var fetch: any;
 declare var Headers: any;
 declare var Request: any;
 declare var Response: any;
-declare module requestAnimationFrame {
-  declare module.exports: (callback: any) => any;
-}
+// declare module requestAnimationFrame {
+//   declare module.exports: (callback: any) => any;
+// }
